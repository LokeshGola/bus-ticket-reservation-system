1. Bus Table

CREATE TABLE bus(
id int PRIMARY KEY auto_increment,
bus_id VARCHAR(8) UNIQUE NOT NULL,
bus_name VARCHAR(20) NOT NULL,
bus_type VARCHAR(20) NOT NULL,
bus_number VARCHAR(20) NOT NULL,
total_seats INT NOT NULL,
source VARCHAR(20) NOT NULL,
destination VARCHAR(20) NOT NULL,
departure_time DATETIME NOT NULL,
arrival_time DATETIME NOT NULL,
is_delete tinyint DEFAULT 0
); 

Note : bus id= AE001, 

ALTER TABLE bus MODIFY bus_name VARCHAR(20) UNIQUE NOT NULL;
ALTER TABLE bus MODIFY bus_number VARCHAR(20) UNIQUE NOT NULL;


2. Passenger Table

CREATE TABLE passenger(
id int PRIMARY KEY auto_increment,
pass_id VARCHAR(8) UNIQUE NOT NULL,
first_name VARCHAR(20) NOT NULL,
last_name VARCHAR(20) NOT NULL,
username VARCHAR(20) UNIQUE NOT NULL,
password VARCHAR(20) NOT NULL,
mobile bigint NOT NULL,
address VARCHAR(20) NOT NULL,
is_delete tinyint DEFAULT 0
);


3. Bookings Table

CREATE TABLE bookings(
id int PRIMARY KEY auto_increment,
bus_id INT NOT NULL,
passenger_id INT NOT NULL, 
startdate datetime NOT NULL,
enddate  datetime NOT NULL,
is_delete tinyint DEFAULT 0,
CONSTRAINT fk_bus_booking FOREIGN KEY(bus_id) REFERENCES bus(id),
CONSTRAINT fk_passenger_booking FOREIGN KEY(passenger_id) REFERENCES passenger(id)
);

-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=--=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--=--==-=-==-=--=
 New Data Base for Bus Reservation System:
 
 1. Bus Table

CREATE TABLE bus(
id int PRIMARY KEY auto_increment,
bus_id VARCHAR(8) UNIQUE NOT NULL,
bus_name VARCHAR(20) NOT NULL,
bus_type VARCHAR(20) NOT NULL,
bus_number VARCHAR(20) NOT NULL,
total_seats INT NOT NULL,
is_delete tinyint DEFAULT 0
); 

ALTER TABLE bus ADD available_seats int ;


2. Schedule Table;

CREATE TABLE schedule(
id int PRIMARY KEY auto_increment,
bus_id int NOT NULL,
source VARCHAR(20) NOT NULL,
destination VARCHAR(20) NOT NULL,
departure_time DATETIME NOT NULL,
arrival_time DATETIME NOT NULL,
is_delete tinyint DEFAULT 0,
CONSTRAINT fk_bus_sche FOREIGN KEY(bus_id) REFERENCES bus(id) ON DELETE CASCADE 
ON UPDATE CASCADE
); 

3. Seats Table;

CREATE TABLE seats(
id int PRIMARY KEY auto_increment,
bus_id int NOT NULL,     
seat_no int NOT NULL,
is_booked tinyint DEFAULT 0,
CONSTRAINT fk_bus_seat FOREIGN KEY(bus_id) REFERENCES bus(id) ON DELETE CASCADE 
ON UPDATE CASCADE
); 

ALTER TABLE seats ADD UNIQUE (bus_id, seat_no);


4. Customer Table

CREATE TABLE Customer(
id int PRIMARY KEY auto_increment,
cus_id VARCHAR(8) UNIQUE NOT NULL,
first_name VARCHAR(20) NOT NULL,
last_name VARCHAR(20) NOT NULL,
address VARCHAR(20) NOT NULL,
mobile bigint NOT NULL,
username VARCHAR(20) UNIQUE NOT NULL,
password VARCHAR(20) NOT NULL,
is_delete tinyint DEFAULT 0
);

ALTER TABLE customer MODIFY mobile bigint UNIQUE NOT NULL;


5. Booking Table;

CREATE TABLE Booking(
id int PRIMARY KEY auto_increment,
bus_id int NOT NULL,   
customer_id int NOT NULL,
is_booked tinyint DEFAULT 0,
CONSTRAINT fk_bus_booking FOREIGN KEY(bus_id) REFERENCES bus(id) ON DELETE CASCADE 
ON UPDATE CASCADE,
CONSTRAINT fk_cus_booking FOREIGN KEY(customer_id) REFERENCES customer(id) ON DELETE CASCADE 
ON UPDATE CASCADE
);

ALTER TABLE booking DROP is_booked;
ALTER TABLE booking ADD booking_date DATETIME ;
ALTER TABLE booking ADD booked_on DATETIME ;


1. bus   2. schedule   3. seats.    4.booking    5. customer

--=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--=-=--=-===---==-=-=-=-=--=-=-=-

QUERIES TO EXECUTE:-
1.
SELECT bus.bus_number, S.source, S.destination FROM bus INNER JOIN schedule S ON 
 bus.id = S.bus_id AND DATE(departure_time) = '2023-04-02 ' AND S.is_delete = 0 AND 
  bus.is_delete = 0;

2.
Insert into bus (bus_id, bus_name, bus_type,bus_number, total_seats) values 
('AE001','Saho','shuttle bus','91001',50 ) ;

3.
Insert into schedule (bus_id, source, destination, departure_time, arrival_time ) 
values ('2','delhi','mathura','2023-04-05 10:15','2023-04-05 15:50' );

4.
Insert into customer (cus_id, first_name, last_name,address, mobile, username, password)
 values ('cus003','Rohan','gola','delhi',8894235235, 'rohan@gmail.com', '12345' ) ;
 
5.
Insert into booking (bus_id, customer_id, booking_date,booked_on, is_booked) values 
('1','1','2023-04-02 18:50:00','2023-03-25 20:50',1 ) ;

6.
SELECT bus.bus_number, S.source, S.destination, available_seats,  DATE(departure_time),
 TIME(departure_time) FROM bus INNER JOIN schedule S ON  bus.id = S.bus_id 
 AND DATE(departure_time) >= '2023-04-02' AND S.is_delete = 0 AND bus.is_delete = 0 ;
  